webpackHotUpdate_N_E("pages/index",{

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/next/dist/compiled/resolve-url-loader/index.js?!./node_modules/next/dist/compiled/sass-loader/cjs.js?!./styles/Home.module.scss":
/*!*******************************************************************************************************************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-3-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-3-2!(webpack)/resolve-url-loader??ref--5-oneOf-3-3!(webpack)/sass-loader/cjs.js??ref--5-oneOf-3-4!./styles/Home.module.scss ***!
  \*******************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".Home_btn__2viaW {\n  transition: background-color 0.3s ease-in-out;\n  border-radius: 6px;\n  min-width: 120px;\n  padding: 16px 24px;\n  text-align: center;\n  font-size: 16px;\n  line-height: 1;\n  font-weight: 500;\n  color: #fff;\n  -webkit-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n}\n\n.Home_btn-large__2qQnB {\n  border-radius: 8px;\n  padding: 21px 32px;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.Home_btn-primary__174-s {\n  background-color: #0070f0;\n}\n.Home_btn-primary__174-s:hover {\n  background-color: #005dd6;\n}\n\n.Home_btn-disabled__2vBkK {\n  background-color: #f2f2f2;\n  color: #a6a6a6;\n}\n.Home_btn-disabled__2vBkK:hover {\n  background-color: #f2f2f2;\n}\n\n.Home_dividerHorizontal__1piUG {\n  border-radius: 50%;\n  width: 100%;\n  height: 1px;\n  background-color: #e5e5e5;\n}\n\n.Home_container__3sao- {\n  height: 100vh;\n  display: grid;\n  grid-template-areas: \"top-bar\" \"content\";\n  grid-template-rows: 72px 1fr;\n  color: #0d0d0d;\n}\n\n.Home_bodyContainer__P-ML5 {\n  grid-area: content;\n  z-index: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.Home_main__1Z1aG {\n  padding: 5rem 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n@media (max-width: 1279px) {\n  .Home_main__1Z1aG {\n    padding: 0;\n  }\n}\n\n.Home_hero__1g6Kc {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n  text-align: center;\n}\n@media (max-width: 767px) {\n  .Home_hero__1g6Kc {\n    text-align: left;\n    padding: 0 24px;\n  }\n}\n@media (min-width: 1280px) {\n  .Home_hero__1g6Kc .Home_heroTextContainer__3iGGE {\n    width: 80vw;\n    max-width: 800px;\n  }\n}\n@media (min-width: 1280px) {\n  .Home_hero__1g6Kc .Home_heroTitle__219xQ {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-size: 60px;\n    line-height: 1.2;\n    font-weight: 700;\n  }\n}\n.Home_hero__1g6Kc .Home_heroSubtitle__1X9BC {\n  margin-top: 28px;\n  font-size: 24px;\n  line-height: 1.5;\n}\n@media (max-width: 767px) {\n  .Home_hero__1g6Kc .Home_heroSubtitle__1X9BC {\n    font-size: 16px;\n  }\n}\n.Home_hero__1g6Kc a {\n  margin-top: 32px;\n}\n\n.Home_productImage__1LfiL {\n  max-width: 100vw;\n  box-shadow: 0 18px 70px -6px rgba(162, 173, 196, 0.4);\n  border-radius: 8px;\n  margin-top: 120px;\n}\n@media (min-width: 1280px) {\n  .Home_productImage__1LfiL {\n    max-width: 80vw;\n  }\n}\n\n.Home_usersBanner__1iL1L {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 120px;\n  height: 240px;\n  width: 100%;\n}\n.Home_usersBanner__1iL1L .Home_usersBannerText__2w5B7 {\n  font-size: 20px;\n  color: #666;\n}\n.Home_usersBanner__1iL1L .Home_usersList__3JCOW {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-top: 64px;\n  margin-bottom: 64px;\n  width: 100%;\n}\n.Home_usersBanner__1iL1L .Home_usersList__3JCOW .Home_usersLogoWrapper__yxHeY {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 32px;\n  flex-basis: 200px;\n  max-height: 72px;\n}\n\n.Home_sectionHeader__15exL {\n  margin-top: 0;\n  margin-bottom: 24px;\n  font-size: 40px;\n  line-height: 1.3;\n}\n@media (max-width: 767px) {\n  .Home_sectionHeader__15exL {\n    font-size: 24px;\n  }\n}\n.Home_sectionHeader__15exL.Home_centered__3BjO0 {\n  text-align: center;\n}\n\n.Home_featuresSection__kXWHT {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f2f2f2;\n  width: 100%;\n  padding: 80px 0;\n}\n.Home_featuresSection__kXWHT .Home_featuresTitleContainer__3VADA {\n  text-align: center;\n}\n@media (min-width: 1280px) {\n  .Home_featuresSection__kXWHT .Home_featuresTitleContainer__3VADA {\n    width: 60vw;\n    max-width: 540px;\n  }\n}\n.Home_featuresSection__kXWHT .Home_featuresTitleContainer__3VADA .Home_featuresSubTitle__1LaMy {\n  font-size: 20px;\n  line-height: 1.3;\n}\n.Home_featuresSection__kXWHT .Home_featuresGrid__RBkNS {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 40px;\n  max-width: 1188px;\n}\n\n.Home_featureCard__1ETE6 {\n  transition: all 0.1s ease-in-out;\n  box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.05);\n  border-radius: 16px;\n  margin: 16px;\n  width: 344px;\n  max-width: calc(100vw - 32px);\n  padding: 40px;\n  background-color: #ffffff;\n}\n@media (max-width: 767px) {\n  .Home_featureCard__1ETE6 {\n    padding: 24px;\n  }\n}\n.Home_featureCard__1ETE6:hover {\n  background-color: #0070f0;\n}\n.Home_featureCard__1ETE6:hover img {\n  filter: brightness(0) invert(1);\n}\n.Home_featureCard__1ETE6:hover h5,\n.Home_featureCard__1ETE6:hover p {\n  color: white;\n}\n.Home_featureCard__1ETE6 .Home_featureCardImage__2fc4Z {\n  margin-bottom: 8px;\n  width: 36px;\n  height: 36px;\n}\n.Home_featureCard__1ETE6 h5 {\n  margin: 0 auto 16px auto;\n  font-size: 20px;\n  line-height: 1.3;\n  font-weight: 600;\n  text-transform: none;\n}\n.Home_featureCard__1ETE6 p {\n  margin: 0;\n  font-size: 16px;\n  line-height: 1.5;\n  font-weight: 400;\n  text-transform: none;\n}\n\n.Home_featuresTagline__ByeBA {\n  margin-top: 160px;\n  margin-bottom: 160px;\n  max-width: 840px;\n}\n\n.Home_learnPanel__3hhA-,\n.Home_buildPanel__3R2Mt,\n.Home_reviewPanel__2-XMU {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-bottom: 160px;\n  width: 100%;\n  height: 100%;\n}\n@media (max-width: 1279px) {\n  .Home_learnPanel__3hhA-,\n.Home_buildPanel__3R2Mt,\n.Home_reviewPanel__2-XMU {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n  }\n}\n.Home_learnPanel__3hhA- .Home_infoPanel__H7S9j,\n.Home_buildPanel__3R2Mt .Home_infoPanel__H7S9j,\n.Home_reviewPanel__2-XMU .Home_infoPanel__H7S9j {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 120px;\n  font-size: 20px;\n  line-height: 1.5;\n}\n@media (max-width: 1279px) {\n  .Home_learnPanel__3hhA- .Home_infoPanel__H7S9j,\n.Home_buildPanel__3R2Mt .Home_infoPanel__H7S9j,\n.Home_reviewPanel__2-XMU .Home_infoPanel__H7S9j {\n    margin-left: 0;\n    padding: 0 24px;\n    grid-row: 1;\n  }\n}\n.Home_learnPanel__3hhA- .Home_infoPanel__H7S9j p,\n.Home_buildPanel__3R2Mt .Home_infoPanel__H7S9j p,\n.Home_reviewPanel__2-XMU .Home_infoPanel__H7S9j p {\n  max-width: 440px;\n  margin-top: 0;\n}\n.Home_learnPanel__3hhA- .Home_infoPanel__H7S9j a,\n.Home_buildPanel__3R2Mt .Home_infoPanel__H7S9j a,\n.Home_reviewPanel__2-XMU .Home_infoPanel__H7S9j a {\n  color: #0070f0;\n  font-weight: 600;\n}\n.Home_learnPanel__3hhA- .Home_imagePanel__36_Gn,\n.Home_buildPanel__3R2Mt .Home_imagePanel__36_Gn,\n.Home_reviewPanel__2-XMU .Home_imagePanel__36_Gn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n@media (max-width: 1279px) {\n  .Home_learnPanel__3hhA- .Home_imagePanel__36_Gn,\n.Home_buildPanel__3R2Mt .Home_imagePanel__36_Gn,\n.Home_reviewPanel__2-XMU .Home_imagePanel__36_Gn {\n    grid-row: 2;\n  }\n}\n.Home_learnPanel__3hhA- .Home_imagePanel__36_Gn img,\n.Home_buildPanel__3R2Mt .Home_imagePanel__36_Gn img,\n.Home_reviewPanel__2-XMU .Home_imagePanel__36_Gn img {\n  width: 800px;\n  max-width: 90vw;\n}\n\n.Home_upcomingFeaturesPanel__3kkcc {\n  height: calc(100vh - 72px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.Home_upcomingFeaturesPanel__3kkcc .Home_upcomingFeaturesContainer__17dbe {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-top: 96px;\n}\n.Home_upcomingFeaturesPanel__3kkcc .Home_upcomingFeatureItem__36_JO {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 280px;\n  text-align: center;\n  font-size: 16px;\n}\n.Home_upcomingFeaturesPanel__3kkcc .Home_upcomingFeatureItem__36_JO h4 {\n  font-size: 20px;\n  margin-bottom: 12px;\n  margin-top: 36px;\n}\n.Home_upcomingFeaturesPanel__3kkcc .Home_upcomingFeatureItem__36_JO .Home_upcomingFeatureItemImagePlaceholder__3pFbi {\n  width: 168px;\n  height: 168px;\n  background-color: #c4c4c4;\n}\n\n.Home_bookDemoForm__lwsib {\n  display: flex;\n  justify-content: center;\n  margin-top: 160px;\n}\n.Home_bookDemoForm__lwsib .Home_floatingPanel__1lD9Q {\n  flex-grow: 1;\n  margin: 0 auto;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.1);\n  border: solid 1px #d9d9d9;\n  border-radius: 6px;\n  max-width: 100vw;\n  padding: 64px 40px;\n  background-color: #fff;\n}\n.Home_bookDemoForm__lwsib .Home_floatingPanel__1lD9Q h5 {\n  margin-top: 0;\n  margin-bottom: 16px;\n  text-align: center;\n  font-size: 28px;\n  line-height: 1.3;\n  font-weight: 600;\n}\n.Home_bookDemoForm__lwsib .Home_floatingPanel__1lD9Q p {\n  margin-top: 0;\n  margin-bottom: 24px;\n  text-align: center;\n  color: #666;\n}\n\n.Home_formContent__2C9DT {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.Home_formContent__2C9DT .Home_fieldRow__XJpnF {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  width: 100%;\n}\n.Home_formContent__2C9DT .Home_fieldRow__XJpnF .Home_textInputHalf__1E5ZP:first-child {\n  margin-right: 12px;\n}\n.Home_formContent__2C9DT .Home_fieldRow__XJpnF .Home_textInputHalf__1E5ZP:last-child {\n  margin-left: 12px;\n}\n.Home_formContent__2C9DT button {\n  outline: 0;\n  border: 0;\n  width: 100%;\n  max-width: 392px;\n}\n\n.Home_textInputHalf__1E5ZP {\n  max-width: 184px;\n}\n\n.Home_textInputFull__1ZMXV {\n  width: 100%;\n}\n\n.Home_textInputHalf__1E5ZP label,\n.Home_textInputFull__1ZMXV label {\n  color: #666;\n  padding-top: 0;\n  font-size: 14px;\n  line-height: 1.3;\n  font-weight: 500;\n}\n.Home_textInputHalf__1E5ZP input,\n.Home_textInputFull__1ZMXV input {\n  transition: all 0.3s ease-in-out;\n  margin-top: 6px;\n  border: solid 1px #d9d9d9;\n  border-radius: 4px;\n  width: 100%;\n  padding: 10px 16px;\n  font-size: 16px;\n  line-height: 1.25;\n  color: #0d0d0d;\n}\n.Home_textInputHalf__1E5ZP input:hover,\n.Home_textInputFull__1ZMXV input:hover {\n  border-color: #0070f0;\n}\n.Home_textInputHalf__1E5ZP input:focus,\n.Home_textInputFull__1ZMXV input:focus {\n  outline: none;\n  box-shadow: 0 0 0 4px rgba(0, 112, 240, 0.2);\n  border-color: #0070f0;\n}\n.Home_textInputHalf__1E5ZP input:-ms-input-placeholder, .Home_textInputFull__1ZMXV input:-ms-input-placeholder {\n  color: #a6a6a6;\n}\n.Home_textInputHalf__1E5ZP input::placeholder,\n.Home_textInputFull__1ZMXV input::placeholder {\n  color: #a6a6a6;\n}", "",{"version":3,"sources":["webpack://buttons.scss","webpack://Home.module.scss","webpack://variables.scss","webpack://components.scss","webpack://../node_modules/include-media/dist/_include-media.scss"],"names":[],"mappings":"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","sourcesContent":["@import 'index';\n\n// Base\n\n.btn {\n  transition: background-color 0.3s ease-in-out;\n  border-radius: 6px;\n  min-width: 120px;\n  padding: 16px 24px;\n  text-align: center;\n  font-size: 16px;\n  line-height: 1;\n  font-weight: 500;\n  color: #fff;\n\n  user-select: none;\n  cursor: pointer;\n}\n\n// Size\n\n.btn-large {\n  border-radius: 8px;\n  padding: 21px 32px;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n// Primary\n\n.btn-primary {\n  background-color: $primary-blue;\n\n  &:hover {\n    background-color: $dark-blue;\n  }\n}\n\n.btn-disabled {\n  background-color: #f2f2f2;\n  color: #a6a6a6;\n\n  &:hover {\n    background-color: #f2f2f2;\n  }\n}\n",".btn {\n  transition: background-color 0.3s ease-in-out;\n  border-radius: 6px;\n  min-width: 120px;\n  padding: 16px 24px;\n  text-align: center;\n  font-size: 16px;\n  line-height: 1;\n  font-weight: 500;\n  color: #fff;\n  user-select: none;\n  cursor: pointer;\n}\n\n.btn-large {\n  border-radius: 8px;\n  padding: 21px 32px;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.btn-primary {\n  background-color: #0070f0;\n}\n.btn-primary:hover {\n  background-color: #005dd6;\n}\n\n.btn-disabled {\n  background-color: #f2f2f2;\n  color: #a6a6a6;\n}\n.btn-disabled:hover {\n  background-color: #f2f2f2;\n}\n\n.dividerHorizontal {\n  border-radius: 50%;\n  width: 100%;\n  height: 1px;\n  background-color: #e5e5e5;\n}\n\n.container {\n  height: 100vh;\n  display: grid;\n  grid-template-areas: \"top-bar\" \"content\";\n  grid-template-rows: 72px 1fr;\n  color: #0d0d0d;\n}\n\n.bodyContainer {\n  grid-area: content;\n  z-index: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.main {\n  padding: 5rem 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n@media (max-width: 1279px) {\n  .main {\n    padding: 0;\n  }\n}\n\n.hero {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n  text-align: center;\n}\n@media (max-width: 767px) {\n  .hero {\n    text-align: left;\n    padding: 0 24px;\n  }\n}\n@media (min-width: 1280px) {\n  .hero .heroTextContainer {\n    width: 80vw;\n    max-width: 800px;\n  }\n}\n@media (min-width: 1280px) {\n  .hero .heroTitle {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-size: 60px;\n    line-height: 1.2;\n    font-weight: 700;\n  }\n}\n.hero .heroSubtitle {\n  margin-top: 28px;\n  font-size: 24px;\n  line-height: 1.5;\n}\n@media (max-width: 767px) {\n  .hero .heroSubtitle {\n    font-size: 16px;\n  }\n}\n.hero a {\n  margin-top: 32px;\n}\n\n.productImage {\n  max-width: 100vw;\n  box-shadow: 0 18px 70px -6px rgba(162, 173, 196, 0.4);\n  border-radius: 8px;\n  margin-top: 120px;\n}\n@media (min-width: 1280px) {\n  .productImage {\n    max-width: 80vw;\n  }\n}\n\n.usersBanner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 120px;\n  height: 240px;\n  width: 100%;\n}\n.usersBanner .usersBannerText {\n  font-size: 20px;\n  color: #666;\n}\n.usersBanner .usersList {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-top: 64px;\n  margin-bottom: 64px;\n  width: 100%;\n}\n.usersBanner .usersList .usersLogoWrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 32px;\n  flex-basis: 200px;\n  max-height: 72px;\n}\n\n.sectionHeader {\n  margin-top: 0;\n  margin-bottom: 24px;\n  font-size: 40px;\n  line-height: 1.3;\n}\n@media (max-width: 767px) {\n  .sectionHeader {\n    font-size: 24px;\n  }\n}\n.sectionHeader.centered {\n  text-align: center;\n}\n\n.featuresSection {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f2f2f2;\n  width: 100%;\n  padding: 80px 0;\n}\n.featuresSection .featuresTitleContainer {\n  text-align: center;\n}\n@media (min-width: 1280px) {\n  .featuresSection .featuresTitleContainer {\n    width: 60vw;\n    max-width: 540px;\n  }\n}\n.featuresSection .featuresTitleContainer .featuresSubTitle {\n  font-size: 20px;\n  line-height: 1.3;\n}\n.featuresSection .featuresGrid {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 40px;\n  max-width: 1188px;\n}\n\n.featureCard {\n  transition: all 0.1s ease-in-out;\n  box-shadow: 0 10px 20px 0 rgba(0, 0, 0, 0.05);\n  border-radius: 16px;\n  margin: 16px;\n  width: 344px;\n  max-width: calc(100vw - 32px);\n  padding: 40px;\n  background-color: #ffffff;\n}\n@media (max-width: 767px) {\n  .featureCard {\n    padding: 24px;\n  }\n}\n.featureCard:hover {\n  background-color: #0070f0;\n}\n.featureCard:hover img {\n  filter: brightness(0) invert(1);\n}\n.featureCard:hover h5,\n.featureCard:hover p {\n  color: white;\n}\n.featureCard .featureCardImage {\n  margin-bottom: 8px;\n  width: 36px;\n  height: 36px;\n}\n.featureCard h5 {\n  margin: 0 auto 16px auto;\n  font-size: 20px;\n  line-height: 1.3;\n  font-weight: 600;\n  text-transform: none;\n}\n.featureCard p {\n  margin: 0;\n  font-size: 16px;\n  line-height: 1.5;\n  font-weight: 400;\n  text-transform: none;\n}\n\n.featuresTagline {\n  margin-top: 160px;\n  margin-bottom: 160px;\n  max-width: 840px;\n}\n\n.learnPanel,\n.buildPanel,\n.reviewPanel {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-bottom: 160px;\n  width: 100%;\n  height: 100%;\n}\n@media (max-width: 1279px) {\n  .learnPanel,\n.buildPanel,\n.reviewPanel {\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n  }\n}\n.learnPanel .infoPanel,\n.buildPanel .infoPanel,\n.reviewPanel .infoPanel {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 120px;\n  font-size: 20px;\n  line-height: 1.5;\n}\n@media (max-width: 1279px) {\n  .learnPanel .infoPanel,\n.buildPanel .infoPanel,\n.reviewPanel .infoPanel {\n    margin-left: 0;\n    padding: 0 24px;\n    grid-row: 1;\n  }\n}\n.learnPanel .infoPanel p,\n.buildPanel .infoPanel p,\n.reviewPanel .infoPanel p {\n  max-width: 440px;\n  margin-top: 0;\n}\n.learnPanel .infoPanel a,\n.buildPanel .infoPanel a,\n.reviewPanel .infoPanel a {\n  color: #0070f0;\n  font-weight: 600;\n}\n.learnPanel .imagePanel,\n.buildPanel .imagePanel,\n.reviewPanel .imagePanel {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n@media (max-width: 1279px) {\n  .learnPanel .imagePanel,\n.buildPanel .imagePanel,\n.reviewPanel .imagePanel {\n    grid-row: 2;\n  }\n}\n.learnPanel .imagePanel img,\n.buildPanel .imagePanel img,\n.reviewPanel .imagePanel img {\n  width: 800px;\n  max-width: 90vw;\n}\n\n.upcomingFeaturesPanel {\n  height: calc(100vh - 72px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.upcomingFeaturesPanel .upcomingFeaturesContainer {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-top: 96px;\n}\n.upcomingFeaturesPanel .upcomingFeatureItem {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 280px;\n  text-align: center;\n  font-size: 16px;\n}\n.upcomingFeaturesPanel .upcomingFeatureItem h4 {\n  font-size: 20px;\n  margin-bottom: 12px;\n  margin-top: 36px;\n}\n.upcomingFeaturesPanel .upcomingFeatureItem .upcomingFeatureItemImagePlaceholder {\n  width: 168px;\n  height: 168px;\n  background-color: #c4c4c4;\n}\n\n.bookDemoForm {\n  display: flex;\n  justify-content: center;\n  margin-top: 160px;\n}\n.bookDemoForm .floatingPanel {\n  flex-grow: 1;\n  margin: 0 auto;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.1);\n  border: solid 1px #d9d9d9;\n  border-radius: 6px;\n  max-width: 100vw;\n  padding: 64px 40px;\n  background-color: #fff;\n}\n.bookDemoForm .floatingPanel h5 {\n  margin-top: 0;\n  margin-bottom: 16px;\n  text-align: center;\n  font-size: 28px;\n  line-height: 1.3;\n  font-weight: 600;\n}\n.bookDemoForm .floatingPanel p {\n  margin-top: 0;\n  margin-bottom: 24px;\n  text-align: center;\n  color: #666;\n}\n\n.formContent {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.formContent .fieldRow {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  width: 100%;\n}\n.formContent .fieldRow .textInputHalf:first-child {\n  margin-right: 12px;\n}\n.formContent .fieldRow .textInputHalf:last-child {\n  margin-left: 12px;\n}\n.formContent button {\n  outline: 0;\n  border: 0;\n  width: 100%;\n  max-width: 392px;\n}\n\n.textInputHalf {\n  max-width: 184px;\n}\n\n.textInputFull {\n  width: 100%;\n}\n\n.textInputHalf label,\n.textInputFull label {\n  color: #666;\n  padding-top: 0;\n  font-size: 14px;\n  line-height: 1.3;\n  font-weight: 500;\n}\n.textInputHalf input,\n.textInputFull input {\n  transition: all 0.3s ease-in-out;\n  margin-top: 6px;\n  border: solid 1px #d9d9d9;\n  border-radius: 4px;\n  width: 100%;\n  padding: 10px 16px;\n  font-size: 16px;\n  line-height: 1.25;\n  color: #0d0d0d;\n}\n.textInputHalf input:hover,\n.textInputFull input:hover {\n  border-color: #0070f0;\n}\n.textInputHalf input:focus,\n.textInputFull input:focus {\n  outline: none;\n  box-shadow: 0 0 0 4px rgba(0, 112, 240, 0.2);\n  border-color: #0070f0;\n}\n.textInputHalf input::placeholder,\n.textInputFull input::placeholder {\n  color: #a6a6a6;\n}","$pt-divider-black: rgba(206, 212, 224, 0.8);\n\n$primary-blue: #0070f0;\n$dark-blue: #005dd6;\n$black: #0d0d0d;\n$grey: #666;\n","@import 'buttons';\n\n// Dividers\n\n.dividerHorizontal {\n  border-radius: 50%;\n  width: 100%;\n  height: 1px;\n  background-color: #e5e5e5;\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	"btn": "Home_btn__2viaW",
	"btn-large": "Home_btn-large__2qQnB",
	"btn-primary": "Home_btn-primary__174-s",
	"btn-disabled": "Home_btn-disabled__2vBkK",
	"dividerHorizontal": "Home_dividerHorizontal__1piUG",
	"container": "Home_container__3sao-",
	"bodyContainer": "Home_bodyContainer__P-ML5",
	"main": "Home_main__1Z1aG",
	"hero": "Home_hero__1g6Kc",
	"heroTextContainer": "Home_heroTextContainer__3iGGE",
	"heroTitle": "Home_heroTitle__219xQ",
	"heroSubtitle": "Home_heroSubtitle__1X9BC",
	"productImage": "Home_productImage__1LfiL",
	"usersBanner": "Home_usersBanner__1iL1L",
	"usersBannerText": "Home_usersBannerText__2w5B7",
	"usersList": "Home_usersList__3JCOW",
	"usersLogoWrapper": "Home_usersLogoWrapper__yxHeY",
	"sectionHeader": "Home_sectionHeader__15exL",
	"centered": "Home_centered__3BjO0",
	"featuresSection": "Home_featuresSection__kXWHT",
	"featuresTitleContainer": "Home_featuresTitleContainer__3VADA",
	"featuresSubTitle": "Home_featuresSubTitle__1LaMy",
	"featuresGrid": "Home_featuresGrid__RBkNS",
	"featureCard": "Home_featureCard__1ETE6",
	"featureCardImage": "Home_featureCardImage__2fc4Z",
	"featuresTagline": "Home_featuresTagline__ByeBA",
	"learnPanel": "Home_learnPanel__3hhA-",
	"buildPanel": "Home_buildPanel__3R2Mt",
	"reviewPanel": "Home_reviewPanel__2-XMU",
	"infoPanel": "Home_infoPanel__H7S9j",
	"imagePanel": "Home_imagePanel__36_Gn",
	"upcomingFeaturesPanel": "Home_upcomingFeaturesPanel__3kkcc",
	"upcomingFeaturesContainer": "Home_upcomingFeaturesContainer__17dbe",
	"upcomingFeatureItem": "Home_upcomingFeatureItem__36_JO",
	"upcomingFeatureItemImagePlaceholder": "Home_upcomingFeatureItemImagePlaceholder__3pFbi",
	"bookDemoForm": "Home_bookDemoForm__lwsib",
	"floatingPanel": "Home_floatingPanel__1lD9Q",
	"formContent": "Home_formContent__2C9DT",
	"fieldRow": "Home_fieldRow__XJpnF",
	"textInputHalf": "Home_textInputHalf__1E5ZP",
	"textInputFull": "Home_textInputFull__1ZMXV"
};
module.exports = ___CSS_LOADER_EXPORT___;


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,